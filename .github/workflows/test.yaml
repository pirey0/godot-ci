name: Increment Version Tag

on:
  workflow_dispatch:

jobs:
  increment-tag:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch all tags
        run: git fetch --tags

      - name: Check if there is a matching tag on the current commit
        id: check_tag
        run: |
          # Check if there is a matching tag on the current commit
          CURRENT_TAG=$(git tag --points-at HEAD --list "v[0-9]*.[0-9]*.[0-9]*.[0-9]*")
          
          if [ -n "$CURRENT_TAG" ]; then
            echo "A matching tag already exists on this commit: $CURRENT_TAG"
            exit 1
          else
            echo "No matching tag on the current commit."
          fi

      - name: Find the latest version tag
        id: find_tag
        run: |
          # Find the first matching tag using git describe
          LATEST_TAG=$(git describe --tags --abbrev=0 --match="v[0-9]*.[0-9]*.[0-9]*.[0-9]*" HEAD)
          echo "Latest tag: $LATEST_TAG"
          
          # Store the tag in an environment variable
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Increment the last number of the version tag
        id: increment_tag
        run: |
          # Extract the numeric parts from the tag
          VERSION_NUM=$(echo $LATEST_TAG | grep -oP '(?<=v)[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
          
          # Split the version into an array by periods
          IFS='.' read -r -a VERSION_ARRAY <<< "$VERSION_NUM"
          
          # Increment the last number
          LAST_INDEX=$((${#VERSION_ARRAY[@]} - 1))
          VERSION_ARRAY[$LAST_INDEX]=$((VERSION_ARRAY[$LAST_INDEX] + 1))
          
          # Rebuild the version string
          NEW_TAG="v${VERSION_ARRAY[0]}.${VERSION_ARRAY[1]}.${VERSION_ARRAY[2]}.${VERSION_ARRAY[3]}"
          
          # Output the new tag
          echo "New incremented tag: $NEW_TAG"
          
          # Store the new tag in an environment variable
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: Print the new tag
        run: |
          echo "The incremented version tag is: ${{ env.NEW_TAG }}"

      - name: Push the new tag
        run: |
          # Configure git for pushing
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          
          # Create the new tag
          git tag ${{ env.NEW_TAG }}
          
          # Push the new tag to the remote repository
          git push origin ${{ env.NEW_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
